version: '3.4'

services:
  ocelotapigateway:
    image: ${DOCKER_REGISTRY-}ocelotapigateway
    build:
      context: .
      dockerfile: ApiGateway/OcelotApiGateway/Dockerfile

  cartservice.api:
    image: ${DOCKER_REGISTRY-}cartserviceapi
    build:
      context: .
      dockerfile: Services/CartService/CartService.API/Dockerfile

  productservice.api:
    image: ${DOCKER_REGISTRY-}productserviceapi
    build:
      context: .
      dockerfile: Services/ProductService/ProductService.API/Dockerfile

  notificationservice.api:
    image: notificationservice.api
    build:
      context: .
      dockerfile: Services/NotificationService/NotificationService.API/Dockerfile

  productservice.db:
    image: postgres
  
  cartservice.db:
    image: postgres
    
  authservice.db:
    image: postgres
    
  cartservice.db.mongo:
    image: mongo

  redis:
    image: redis:latest
    
  rabbitmq:
    image: rabbitmq:3-management
    
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0

  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0

  prometheus:
    image: prom/prometheus
    
  grafana:
    image: grafana/grafana
    
  jaeger:
    image: jaegertracing/all-in-one
  
  otel-collector:
      image: otel/opentelemetry-collector:latest
#  consul:
#    image: consul:latest

volumes:
  mongo_cartservice_data:
  postgres_productservice_data:
  postgres_cartservice_data:
  postgres_authservice_data:
  elasticsearch-data:
    driver: local
  redis-data:
    driver: local
  consul-data:
    driver: local

networks:
  microservices-network:
    driver: bridge